name: Build and deploy
on:
  push:
    branches:
      - main

jobs:
  deploy-api:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Deploy to DEV
        run: yarn api deploy --stage dev
      - name: Deploy to PROD
        run: yarn api deploy --stage prod
  build-web:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production
      REACT_APP_MAPBOX_ACCESS_TOKEN: ${{ secrets.REACT_APP_MAPBOX_ACCESS_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Create build
        run: yarn web build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: web-artifact
          path: |
            apps/web/build/
            netlify.toml
          if-no-files-found: error
  deploy-web:
    needs: build-web
    runs-on: ubuntu-latest
    env:
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
    steps:
      - name: Download web artifact
        uses: actions/download-artifact@v3
        with:
          name: web-artifact
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: web-artifact
          netlify-config-path: web-artifact/netlify.toml
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        timeout-minutes: 1
